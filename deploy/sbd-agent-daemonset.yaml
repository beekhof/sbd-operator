apiVersion: apps/v1
kind: DaemonSet
metadata:
  name: sbd-agent
  namespace: kube-system
  labels:
    app: sbd-agent
    component: sbd-agent
spec:
  selector:
    matchLabels:
      app: sbd-agent
  template:
    metadata:
      labels:
        app: sbd-agent
        component: sbd-agent
    spec:
      serviceAccountName: sbd-agent
      hostNetwork: true
      hostPID: true
      tolerations:
      # Allow scheduling on all nodes including control plane
      - operator: Exists
        effect: NoSchedule
      - operator: Exists
        effect: NoExecute
      nodeSelector:
        # Only deploy on nodes that have SBD capability
        # This can be customized based on your cluster setup
        node-role.kubernetes.io/control-plane: ""
      containers:
      - name: sbd-agent
        image: quay.io/medik8s/sbd-agent:latest
        imagePullPolicy: Always
        # Run with required privileges for hardware access
        securityContext:
          privileged: true
          runAsUser: 0  # Must run as root for device access
          capabilities:
            add:
            - SYS_ADMIN
            - SYS_RAWIO
        # Resource limits to prevent excessive resource usage
        resources:
          requests:
            memory: "64Mi"
            cpu: "100m"
          limits:
            memory: "128Mi"
            cpu: "200m"
        # Command line arguments for the SBD agent
        args:
        - "--watchdog-path=/dev/watchdog"
        - "--watchdog-timeout=30s"
        - "--sbd-device=/dev/disk/by-id/sbd-device"
        - "--log-level=info"
        # Environment variables
        env:
        - name: NODE_NAME
          valueFrom:
            fieldRef:
              fieldPath: spec.nodeName
        - name: POD_NAME
          valueFrom:
            fieldRef:
              fieldPath: metadata.name
        - name: POD_NAMESPACE
          valueFrom:
            fieldRef:
              fieldPath: metadata.namespace
        # Volume mounts for device access
        volumeMounts:
        - name: dev
          mountPath: /dev
        - name: sys
          mountPath: /sys
          readOnly: true
        - name: proc
          mountPath: /proc
          readOnly: true
        # Liveness probe to ensure the agent is healthy
        livenessProbe:
          exec:
            command:
            - /bin/sh
            - -c
            - "ps aux | grep sbd-agent | grep -v grep"
          initialDelaySeconds: 30
          periodSeconds: 30
          timeoutSeconds: 10
          failureThreshold: 3
        # Readiness probe to check if the agent is ready
        readinessProbe:
          exec:
            command:
            - /bin/sh
            - -c
            - "test -f /dev/watchdog"
          initialDelaySeconds: 10
          periodSeconds: 10
          timeoutSeconds: 5
          failureThreshold: 3
      # Host volumes for device access
      volumes:
      - name: dev
        hostPath:
          path: /dev
          type: Directory
      - name: sys
        hostPath:
          path: /sys
          type: Directory
      - name: proc
        hostPath:
          path: /proc
          type: Directory
      # Restart policy for the daemonset
      restartPolicy: Always
      # DNS policy
      dnsPolicy: ClusterFirstWithHostNet
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: sbd-agent
  namespace: kube-system
  labels:
    app: sbd-agent
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: sbd-agent
  labels:
    app: sbd-agent
rules:
# Allow reading node information
- apiGroups: [""]
  resources: ["nodes"]
  verbs: ["get", "list", "watch"]
# Allow reading pod information
- apiGroups: [""]
  resources: ["pods"]
  verbs: ["get", "list", "watch"]
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: sbd-agent
  labels:
    app: sbd-agent
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: sbd-agent
subjects:
- kind: ServiceAccount
  name: sbd-agent
  namespace: kube-system 