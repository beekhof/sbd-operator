apiVersion: v1
kind: Namespace
metadata:
  labels:
    app.kubernetes.io/managed-by: kustomize
    app.kubernetes.io/name: sbd-operator
    control-plane: controller-manager
  name: sbd-operator-system
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.18.0
  name: sbdconfigs.medik8s.medik8s.io
spec:
  group: medik8s.medik8s.io
  names:
    kind: SBDConfig
    listKind: SBDConfigList
    plural: sbdconfigs
    singular: sbdconfig
  scope: Cluster
  versions:
  - name: v1alpha1
    schema:
      openAPIV3Schema:
        description: SBDConfig is the Schema for the sbdconfigs API.
        properties:
          apiVersion:
            description: |-
              APIVersion defines the versioned schema of this representation of an object.
              Servers should convert recognized schemas to the latest internal value, and
              may reject unrecognized values.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
            type: string
          kind:
            description: |-
              Kind is a string value representing the REST resource this object represents.
              Servers may infer this from the endpoint the client submits requests to.
              Cannot be updated.
              In CamelCase.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
            type: string
          metadata:
            type: object
          spec:
            description: SBDConfigSpec defines the desired state of SBDConfig.
            properties:
              image:
                default: sbd-agent:latest
                description: Image is the container image for the SBD agent DaemonSet
                type: string
              namespace:
                default: sbd-system
                description: Namespace is the namespace where the SBD agent DaemonSet
                  will be deployed
                type: string
              sbdWatchdogPath:
                default: /dev/watchdog
                description: SbdWatchdogPath is the path to the watchdog device on
                  the host
                type: string
            required:
            - sbdWatchdogPath
            type: object
          status:
            description: SBDConfigStatus defines the observed state of SBDConfig.
            properties:
              daemonSetReady:
                description: DaemonSetReady indicates whether the SBD agent DaemonSet
                  is ready
                type: boolean
              readyNodes:
                description: ReadyNodes is the number of nodes where the SBD agent
                  is ready
                format: int32
                type: integer
              totalNodes:
                description: TotalNodes is the total number of nodes where the SBD
                  agent should be deployed
                format: int32
                type: integer
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.18.0
  name: sbdremediations.medik8s.medik8s.io
spec:
  group: medik8s.medik8s.io
  names:
    kind: SBDRemediation
    listKind: SBDRemediationList
    plural: sbdremediations
    singular: sbdremediation
  scope: Namespaced
  versions:
  - additionalPrinterColumns:
    - jsonPath: .spec.nodeName
      name: Node
      type: string
    - jsonPath: .status.conditions[?(@.type=='Ready')].status
      name: Ready
      type: string
    - jsonPath: .status.conditions[?(@.type=='FencingSucceeded')].status
      name: Fencing Succeeded
      type: string
    - jsonPath: .status.nodeID
      name: NodeID
      type: integer
    - jsonPath: .metadata.creationTimestamp
      name: Age
      type: date
    name: v1alpha1
    schema:
      openAPIV3Schema:
        description: SBDRemediation is the Schema for the sbdremediations API.
        properties:
          apiVersion:
            description: |-
              APIVersion defines the versioned schema of this representation of an object.
              Servers should convert recognized schemas to the latest internal value, and
              may reject unrecognized values.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
            type: string
          kind:
            description: |-
              Kind is a string value representing the REST resource this object represents.
              Servers may infer this from the endpoint the client submits requests to.
              Cannot be updated.
              In CamelCase.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
            type: string
          metadata:
            type: object
          spec:
            description: SBDRemediationSpec defines the desired state of SBDRemediation.
            properties:
              nodeName:
                description: NodeName is the name of the Kubernetes node to be fenced
                type: string
              reason:
                default: NodeUnresponsive
                description: Reason specifies why this node needs to be fenced
                enum:
                - HeartbeatTimeout
                - NodeUnresponsive
                - ManualFencing
                type: string
              timeoutSeconds:
                default: 60
                description: TimeoutSeconds specifies how long to wait before considering
                  the fencing failed
                format: int32
                maximum: 300
                minimum: 30
                type: integer
            required:
            - nodeName
            type: object
          status:
            description: SBDRemediationStatus defines the observed state of SBDRemediation.
            properties:
              conditions:
                description: Conditions represent the latest available observations
                  of the remediation's current state
                items:
                  description: Condition contains details for one aspect of the current
                    state of this API Resource.
                  properties:
                    lastTransitionTime:
                      description: |-
                        lastTransitionTime is the last time the condition transitioned from one status to another.
                        This should be when the underlying condition changed.  If that is not known, then using the time when the API field changed is acceptable.
                      format: date-time
                      type: string
                    message:
                      description: |-
                        message is a human readable message indicating details about the transition.
                        This may be an empty string.
                      maxLength: 32768
                      type: string
                    observedGeneration:
                      description: |-
                        observedGeneration represents the .metadata.generation that the condition was set based upon.
                        For instance, if .metadata.generation is currently 12, but the .status.conditions[x].observedGeneration is 9, the condition is out of date
                        with respect to the current state of the instance.
                      format: int64
                      minimum: 0
                      type: integer
                    reason:
                      description: |-
                        reason contains a programmatic identifier indicating the reason for the condition's last transition.
                        Producers of specific condition types may define expected values and meanings for this field,
                        and whether the values are considered a guaranteed API.
                        The value should be a CamelCase string.
                        This field may not be empty.
                      maxLength: 1024
                      minLength: 1
                      pattern: ^[A-Za-z]([A-Za-z0-9_,:]*[A-Za-z0-9_])?$
                      type: string
                    status:
                      description: status of the condition, one of True, False, Unknown.
                      enum:
                      - "True"
                      - "False"
                      - Unknown
                      type: string
                    type:
                      description: type of condition in CamelCase or in foo.example.com/CamelCase.
                      maxLength: 316
                      pattern: ^([a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*/)?(([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9])$
                      type: string
                  required:
                  - lastTransitionTime
                  - message
                  - reason
                  - status
                  - type
                  type: object
                type: array
                x-kubernetes-list-map-keys:
                - type
                x-kubernetes-list-type: map
              fenceMessageWritten:
                description: FenceMessageWritten indicates if the fence message was
                  successfully written to the SBD device
                type: boolean
              lastUpdateTime:
                description: LastUpdateTime is the time when this status was last
                  updated
                format: date-time
                type: string
              nodeID:
                description: NodeID is the numeric ID assigned to the target node
                  for SBD operations
                type: integer
              operatorInstance:
                description: OperatorInstance identifies which operator instance is
                  handling this remediation
                type: string
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
---
apiVersion: v1
kind: ServiceAccount
metadata:
  labels:
    app.kubernetes.io/managed-by: kustomize
    app.kubernetes.io/name: sbd-operator
  name: sbd-operator-controller-manager
  namespace: sbd-operator-system
---
apiVersion: v1
automountServiceAccountToken: true
kind: ServiceAccount
metadata:
  labels:
    app.kubernetes.io/component: agent
    app.kubernetes.io/managed-by: sbd-operator
    app.kubernetes.io/name: sbd-agent
    app.kubernetes.io/part-of: sbd-operator
  name: sbd-operator-sbd-agent
  namespace: sbd-operator-system
---
apiVersion: v1
automountServiceAccountToken: true
kind: ServiceAccount
metadata:
  labels:
    app.kubernetes.io/component: manager
    app.kubernetes.io/managed-by: kustomize
    app.kubernetes.io/name: sbd-operator
    app.kubernetes.io/part-of: sbd-operator
  name: sbd-operator-sbd-operator-controller-manager
  namespace: sbd-operator-system
---
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  labels:
    app.kubernetes.io/managed-by: kustomize
    app.kubernetes.io/name: sbd-operator
  name: sbd-operator-leader-election-role
  namespace: sbd-operator-system
rules:
- apiGroups:
  - ""
  resources:
  - configmaps
  verbs:
  - get
  - list
  - watch
  - create
  - update
  - patch
  - delete
- apiGroups:
  - coordination.k8s.io
  resources:
  - leases
  verbs:
  - get
  - list
  - watch
  - create
  - update
  - patch
  - delete
- apiGroups:
  - ""
  resources:
  - events
  verbs:
  - create
  - patch
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: sbd-operator-manager-role
rules:
- apiGroups:
  - ""
  resources:
  - events
  verbs:
  - create
  - patch
- apiGroups:
  - ""
  resources:
  - namespaces
  verbs:
  - create
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - ""
  resources:
  - serviceaccounts
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - apps
  resources:
  - daemonsets
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - coordination.k8s.io
  resources:
  - leases
  verbs:
  - create
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - medik8s.medik8s.io
  resources:
  - sbdconfigs
  - sbdremediations
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - medik8s.medik8s.io
  resources:
  - sbdconfigs/finalizers
  - sbdremediations/finalizers
  verbs:
  - update
- apiGroups:
  - medik8s.medik8s.io
  resources:
  - sbdconfigs/status
  - sbdremediations/status
  verbs:
  - get
  - patch
  - update
- apiGroups:
  - rbac.authorization.k8s.io
  resources:
  - clusterrolebindings
  - clusterroles
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: sbd-operator-metrics-auth-role
rules:
- apiGroups:
  - authentication.k8s.io
  resources:
  - tokenreviews
  verbs:
  - create
- apiGroups:
  - authorization.k8s.io
  resources:
  - subjectaccessreviews
  verbs:
  - create
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: sbd-operator-metrics-reader
rules:
- nonResourceURLs:
  - /metrics
  verbs:
  - get
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  labels:
    app.kubernetes.io/component: agent
    app.kubernetes.io/managed-by: sbd-operator
    app.kubernetes.io/name: sbd-agent
    app.kubernetes.io/part-of: sbd-operator
  name: sbd-operator-sbd-agent-role
rules:
- apiGroups:
  - ""
  resources:
  - pods
  verbs:
  - get
  - list
- apiGroups:
  - ""
  resources:
  - nodes
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - ""
  resources:
  - events
  verbs:
  - create
  - patch
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  labels:
    app: sbd-agent
    app.kubernetes.io/component: openshift-resources
    app.kubernetes.io/name: sbd-operator
  name: sbd-operator-sbd-agent-scc-user
rules:
- apiGroups:
  - security.openshift.io
  resourceNames:
  - sbd-operator-sbd-agent-privileged
  resources:
  - securitycontextconstraints
  verbs:
  - use
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  labels:
    app.kubernetes.io/component: manager
    app.kubernetes.io/managed-by: kustomize
    app.kubernetes.io/name: sbd-operator
    app.kubernetes.io/part-of: sbd-operator
  name: sbd-operator-sbd-operator-manager-role
rules:
- apiGroups:
  - ""
  resources:
  - namespaces
  verbs:
  - create
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - apps
  resources:
  - daemonsets
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - ""
  resources:
  - nodes
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - ""
  resources:
  - pods
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - coordination.k8s.io
  resources:
  - leases
  verbs:
  - create
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - ""
  resources:
  - events
  verbs:
  - create
  - get
  - list
  - patch
  - watch
- apiGroups:
  - ""
  resources:
  - serviceaccounts
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - rbac.authorization.k8s.io
  resources:
  - clusterroles
  - clusterrolebindings
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - medik8s.medik8s.io
  resources:
  - sbdconfigs
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - medik8s.medik8s.io
  resources:
  - sbdconfigs/finalizers
  verbs:
  - update
- apiGroups:
  - medik8s.medik8s.io
  resources:
  - sbdconfigs/status
  verbs:
  - get
  - patch
  - update
- apiGroups:
  - medik8s.medik8s.io
  resources:
  - sbdremediations
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - medik8s.medik8s.io
  resources:
  - sbdremediations/finalizers
  verbs:
  - update
- apiGroups:
  - medik8s.medik8s.io
  resources:
  - sbdremediations/status
  verbs:
  - get
  - patch
  - update
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  labels:
    app.kubernetes.io/managed-by: kustomize
    app.kubernetes.io/name: sbd-operator
  name: sbd-operator-sbdconfig-admin-role
rules:
- apiGroups:
  - medik8s.medik8s.io
  resources:
  - sbdconfigs
  verbs:
  - '*'
- apiGroups:
  - medik8s.medik8s.io
  resources:
  - sbdconfigs/status
  verbs:
  - get
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  labels:
    app.kubernetes.io/managed-by: kustomize
    app.kubernetes.io/name: sbd-operator
  name: sbd-operator-sbdconfig-editor-role
rules:
- apiGroups:
  - medik8s.medik8s.io
  resources:
  - sbdconfigs
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - medik8s.medik8s.io
  resources:
  - sbdconfigs/status
  verbs:
  - get
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  labels:
    app.kubernetes.io/managed-by: kustomize
    app.kubernetes.io/name: sbd-operator
  name: sbd-operator-sbdconfig-viewer-role
rules:
- apiGroups:
  - medik8s.medik8s.io
  resources:
  - sbdconfigs
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - medik8s.medik8s.io
  resources:
  - sbdconfigs/status
  verbs:
  - get
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  labels:
    app.kubernetes.io/managed-by: kustomize
    app.kubernetes.io/name: sbd-operator
  name: sbd-operator-sbdremediation-admin-role
rules:
- apiGroups:
  - medik8s.medik8s.io
  resources:
  - sbdremediations
  verbs:
  - '*'
- apiGroups:
  - medik8s.medik8s.io
  resources:
  - sbdremediations/status
  verbs:
  - get
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  labels:
    app.kubernetes.io/managed-by: kustomize
    app.kubernetes.io/name: sbd-operator
  name: sbd-operator-sbdremediation-editor-role
rules:
- apiGroups:
  - medik8s.medik8s.io
  resources:
  - sbdremediations
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - medik8s.medik8s.io
  resources:
  - sbdremediations/status
  verbs:
  - get
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  labels:
    app.kubernetes.io/managed-by: kustomize
    app.kubernetes.io/name: sbd-operator
  name: sbd-operator-sbdremediation-viewer-role
rules:
- apiGroups:
  - medik8s.medik8s.io
  resources:
  - sbdremediations
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - medik8s.medik8s.io
  resources:
  - sbdremediations/status
  verbs:
  - get
---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  labels:
    app.kubernetes.io/managed-by: kustomize
    app.kubernetes.io/name: sbd-operator
  name: sbd-operator-leader-election-rolebinding
  namespace: sbd-operator-system
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: sbd-operator-leader-election-role
subjects:
- kind: ServiceAccount
  name: sbd-operator-controller-manager
  namespace: sbd-operator-system
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  labels:
    app.kubernetes.io/managed-by: kustomize
    app.kubernetes.io/name: sbd-operator
  name: sbd-operator-manager-rolebinding
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: sbd-operator-manager-role
subjects:
- kind: ServiceAccount
  name: sbd-operator-controller-manager
  namespace: sbd-operator-system
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: sbd-operator-metrics-auth-rolebinding
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: sbd-operator-metrics-auth-role
subjects:
- kind: ServiceAccount
  name: sbd-operator-controller-manager
  namespace: sbd-operator-system
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  labels:
    app.kubernetes.io/component: agent
    app.kubernetes.io/managed-by: sbd-operator
    app.kubernetes.io/name: sbd-agent
    app.kubernetes.io/part-of: sbd-operator
  name: sbd-operator-sbd-agent-rolebinding
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: sbd-operator-sbd-agent-role
subjects:
- kind: ServiceAccount
  name: sbd-operator-sbd-agent
  namespace: sbd-operator-system
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  labels:
    app: sbd-agent
    app.kubernetes.io/component: openshift-resources
    app.kubernetes.io/name: sbd-operator
  name: sbd-operator-sbd-agent-scc-user
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: sbd-operator-sbd-agent-scc-user
subjects:
- kind: ServiceAccount
  name: sbd-agent
  namespace: sbd-system
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  labels:
    app.kubernetes.io/component: manager
    app.kubernetes.io/managed-by: kustomize
    app.kubernetes.io/name: sbd-operator
    app.kubernetes.io/part-of: sbd-operator
  name: sbd-operator-sbd-operator-manager-rolebinding
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: sbd-operator-sbd-operator-manager-role
subjects:
- kind: ServiceAccount
  name: sbd-operator-sbd-operator-controller-manager
  namespace: sbd-operator-system
---
apiVersion: v1
kind: Service
metadata:
  labels:
    app.kubernetes.io/managed-by: kustomize
    app.kubernetes.io/name: sbd-operator
    control-plane: controller-manager
  name: sbd-operator-controller-manager-metrics-service
  namespace: sbd-operator-system
spec:
  ports:
  - name: https
    port: 8443
    protocol: TCP
    targetPort: 8443
  selector:
    app.kubernetes.io/name: sbd-operator
    control-plane: controller-manager
---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app.kubernetes.io/managed-by: kustomize
    app.kubernetes.io/name: sbd-operator
    control-plane: controller-manager
  name: sbd-operator-controller-manager
  namespace: sbd-operator-system
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: sbd-operator
      control-plane: controller-manager
  template:
    metadata:
      annotations:
        kubectl.kubernetes.io/default-container: manager
      labels:
        app.kubernetes.io/name: sbd-operator
        control-plane: controller-manager
    spec:
      containers:
      - args:
        - --metrics-bind-address=:8443
        - --leader-elect
        - --health-probe-bind-address=:8081
        command:
        - /manager
        image: quay.io/medik8s/sbd-operator:latest
        livenessProbe:
          httpGet:
            path: /healthz
            port: 8081
          initialDelaySeconds: 15
          periodSeconds: 20
        name: manager
        ports: []
        readinessProbe:
          httpGet:
            path: /readyz
            port: 8081
          initialDelaySeconds: 5
          periodSeconds: 10
        resources:
          limits:
            cpu: 500m
            memory: 128Mi
          requests:
            cpu: 10m
            memory: 64Mi
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            drop:
            - ALL
        volumeMounts: []
      securityContext:
        runAsNonRoot: true
        seccompProfile:
          type: RuntimeDefault
      serviceAccountName: sbd-operator-controller-manager
      terminationGracePeriodSeconds: 10
      volumes: []
---
allowHostDirVolumePlugin: true
allowHostIPC: false
allowHostNetwork: true
allowHostPID: true
allowHostPorts: false
allowPrivilegedContainer: true
allowedCapabilities:
- SYS_ADMIN
apiVersion: security.openshift.io/v1
defaultAddCapabilities: null
fsGroup:
  type: RunAsAny
groups: []
kind: SecurityContextConstraints
metadata:
  annotations:
    kubernetes.io/description: SecurityContextConstraints for SBD Agent pods that
      require privileged access to hardware watchdog and block devices
  labels:
    app: sbd-agent
    app.kubernetes.io/component: openshift-resources
    app.kubernetes.io/name: sbd-operator
  name: sbd-operator-sbd-agent-privileged
  namespace: sbd-operator-system
priority: null
readOnlyRootFilesystem: false
requiredDropCapabilities: null
runAsUser:
  type: RunAsAny
seLinuxContext:
  type: RunAsAny
supplementalGroups:
  type: RunAsAny
users:
- system:serviceaccount:sbd-system:sbd-agent
volumes:
- configMap
- downwardAPI
- emptyDir
- hostPath
- persistentVolumeClaim
- projected
- secret
